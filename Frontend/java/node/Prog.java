/*
 * Generated by classgen, version 1.5
 * 30.05.13 19:22
 */
package node;

public class Prog implements SyntaxNode {

  private SyntaxNode parent;
  public Output output;
  public Input input;
  public Polynom polynom;

  public Prog (Output output, Input input, Polynom polynom) {
    this.output = output;
    if (output != null) output.setParent(this);
    this.input = input;
    if (input != null) input.setParent(this);
    this.polynom = polynom;
    if (polynom != null) polynom.setParent(this);
  }

  public SyntaxNode getParent() {
    return parent;
  }

  public void setParent(SyntaxNode parent) {
    this.parent = parent;
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (output != null) output.accept(visitor);
    if (input != null) input.accept(visitor);
    if (polynom != null) polynom.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (output != null) output.traverseTopDown(visitor);
    if (input != null) input.traverseTopDown(visitor);
    if (polynom != null) polynom.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (output != null) output.traverseBottomUp(visitor);
    if (input != null) input.traverseBottomUp(visitor);
    if (polynom != null) polynom.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString() {
    return toString("");
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("Prog(\n");
      if (output != null)
        buffer.append(output.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
      if (input != null)
        buffer.append(input.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
      if (polynom != null)
        buffer.append(polynom.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [Prog]");
    return buffer.toString();
  }
}
