/*
 * Generated by classgen, version 1.5
 * 26.07.13 09:18
 */
package edu.tum.lua.ast;

public class FuncNameVarDotFuncName extends FuncName {

  public Var var;
  public FuncName funcName;

  public FuncNameVarDotFuncName (Var var, FuncName funcName) {
    this.var = var;
    if (var != null) var.setParent(this);
    this.funcName = funcName;
    if (funcName != null) funcName.setParent(this);
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (var != null) var.accept(visitor);
    if (funcName != null) funcName.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (var != null) var.traverseTopDown(visitor);
    if (funcName != null) funcName.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (var != null) var.traverseBottomUp(visitor);
    if (funcName != null) funcName.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("FuncNameVarDotFuncName(\n");
      if (var != null)
        buffer.append(var.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
      if (funcName != null)
        buffer.append(funcName.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [FuncNameVarDotFuncName]");
    return buffer.toString();
  }
}
