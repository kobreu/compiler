/*
 * Generated by classgen, version 1.5
 * 30.07.13 16:47
 */
package edu.tum.lua.ast;

public interface Visitor {

  public void visit(Op op);
  public void visit(StatList statList);
  public void visit(VarList varList);
  public void visit(NameList nameList);
  public void visit(ExpList expList);
  public void visit(FieldList fieldList);
  public void visit(Block block);
  public void visit(Name name);
  public void visit(TableConstructor tableConstructor);
  public void visit(LastStat lastStat);
  public void visit(LastReturn lastReturn);
  public void visit(LastBreak lastBreak);
  public void visit(Stat stat);
  public void visit(Asm asm);
  public void visit(FuncCallStmt funcCallStmt);
  public void visit(DoExp doExp);
  public void visit(WhileExp whileExp);
  public void visit(RepeatUntil repeatUntil);
  public void visit(IfThenElse ifThenElse);
  public void visit(ForExp forExp);
  public void visit(ForIn forIn);
  public void visit(LocalFuncDef localFuncDef);
  public void visit(LocalDecl localDecl);
  public void visit(Exp exp);
  public void visit(Nil nil);
  public void visit(BooleanExp booleanExp);
  public void visit(NumberExp numberExp);
  public void visit(TextExp textExp);
  public void visit(Dots dots);
  public void visit(PreExp preExp);
  public void visit(TableConstructorExp tableConstructorExp);
  public void visit(Binop binop);
  public void visit(Unop unop);
  public void visit(FunctionExp functionExp);
  public void visit(Var var);
  public void visit(Variable variable);
  public void visit(VarTabIndex varTabIndex);
  public void visit(PrefixExp prefixExp);
  public void visit(PrefixExpVar prefixExpVar);
  public void visit(PrefixExpFuncCall prefixExpFuncCall);
  public void visit(PrefixExpExp prefixExpExp);
  public void visit(FunctionCall functionCall);
  public void visit(FuncCall funcCall);
  public void visit(FuncCallSelf funcCallSelf);
  public void visit(FuncName funcName);
  public void visit(FuncNameVar funcNameVar);
  public void visit(FuncNameVarDotFuncName funcNameVarDotFuncName);
  public void visit(FuncNameDDotVar funcNameDDotVar);
  public void visit(Field field);
  public void visit(FieldLRExp fieldLRExp);
  public void visit(FieldNameExp fieldNameExp);
  public void visit(FieldExp fieldExp);

}
