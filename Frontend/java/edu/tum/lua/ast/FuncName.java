/*
 * Generated by classgen, version 1.5
 * 23.07.13 15:35
 */
package edu.tum.lua.ast;

public class FuncName implements SyntaxNode {

  private SyntaxNode parent;
  public String ident;
  public MemberList members;
  public String method;

  public FuncName (String ident, MemberList members, String method) {
    this.ident = ident;
    this.members = members;
    if (members != null) members.setParent(this);
    this.method = method;
  }

  public SyntaxNode getParent() {
    return parent;
  }

  public void setParent(SyntaxNode parent) {
    this.parent = parent;
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (members != null) members.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (members != null) members.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (members != null) members.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString() {
    return toString("");
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("FuncName(\n");
    buffer.append("  "+tab+ident);
    buffer.append("\n");
      if (members != null)
        buffer.append(members.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append("  "+tab+method);
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [FuncName]");
    return buffer.toString();
  }
}
