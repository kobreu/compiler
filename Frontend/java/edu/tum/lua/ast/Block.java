/*
 * Generated by classgen, version 1.5
 * 23.07.13 15:35
 */
package edu.tum.lua.ast;

public class Block implements SyntaxNode {

  private SyntaxNode parent;
  public Chunk chunk;

  public Block (Chunk chunk) {
    this.chunk = chunk;
    if (chunk != null) chunk.setParent(this);
  }

  public SyntaxNode getParent() {
    return parent;
  }

  public void setParent(SyntaxNode parent) {
    this.parent = parent;
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (chunk != null) chunk.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (chunk != null) chunk.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (chunk != null) chunk.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString() {
    return toString("");
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("Block(\n");
      if (chunk != null)
        buffer.append(chunk.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [Block]");
    return buffer.toString();
  }
}
